{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","addNewChat","name","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","type","placeholder","room","Chat","input","setInput","roomId","useParams","setRoomName","sendMessage","e","a","preventDefault","console","log","displayName","timestamp","FieldValue","serverTimestamp","length","toDate","toUTCString","onChange","target","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e95da98.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAxc-5WvGbg6Yh5MHnkwXJarpZgcQfadsI\",\r\n    authDomain: \"whatsapp-a9984.firebaseapp.com\",\r\n    projectId: \"whatsapp-a9984\",\r\n    storageBucket: \"whatsapp-a9984.appspot.com\",\r\n    messagingSenderId: \"563376756986\",\r\n    appId: \"1:563376756986:web:9e84c7e77f46f50fce1143\",\r\n    measurementId: \"G-PFZJBX29WT\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp\r\n  (firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {auth, provider};\r\n  export default db;","import {React,useState,useEffect} from 'react'\r\nimport './SidebarChat.css'\r\nimport { Avatar } from '@material-ui/core'\r\nimport db from './firebase';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction SidebarChat({id,addNewChat,name}) {\r\n    const [seed,setSeed] = useState(''); \r\n    const [messages,setMessages] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(id)\r\n        {\r\n        db.collection('rooms').doc(id).collection\r\n        (\"messages\").orderBy(\"timestamp\",\"desc\")\r\n        .onSnapshot((snapshot) => setMessages(snapshot.docs.map((doc) =>\r\n        doc.data()))\r\n        )\r\n        }\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000))\r\n\r\n    },[])\r\n\r\n    const createChat = () => {\r\n\r\n        const roomName = prompt(\"please enter the name of room\");\r\n        if(roomName)\r\n        {\r\n            // do some clever database stuff here\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n            })\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    return !addNewChat ?(\r\n        <Link to={`/rooms/${id}`}>\r\n        <div className=\"sidebarChat\">\r\n            <Avatar src={`http://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n            <div className=\"sidebarChat_info\">\r\n                {/* <h2>Room Name</h2> */}\r\n                <h2>{name}</h2>\r\n                {/* <p>This is the last message</p> */}\r\n                <p>{messages[0]?.message}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    ) : (\r\n\r\n        <div onClick = {createChat} className=\"sidebarChat\">\r\n             <h2>Add New Chat</h2>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import { createContext,useReducer, useContext } from \"react\"\r\nimport React from 'react'\r\nexport const StateContext = createContext();\r\n\r\n\r\nexport const StateProvider = ({reducer,initialState,children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n    \r\n)\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import {React,useState,useEffect} from 'react'\r\nimport \"./Sidebar.css\";\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Avatar } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase.js'\r\nimport {useStateValue} from './StateProvider'\r\nfunction Sidebar() {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n    \r\n    useEffect( () =>{\r\n        const unsubscribe=db.collection('rooms').onSnapshot((snapshot) => \r\n            setRooms(snapshot.docs.map((doc) =>({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            }))\r\n        ))\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={user?.photoURL}/>\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"sidebar_search\">\r\n                {/* <input type=\"text\"/> */}\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <IconButton>\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"search or start new chat\" />\r\n            </div>\r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name}/>\r\n                ))}\r\n                {/* <SidebarChat/>\r\n                <SidebarChat/>\r\n                <SidebarChat/>\r\n                <SidebarChat/>\r\n                <SidebarChat/> */}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import {React,useState,useEffect} from 'react'\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport './Chat.css'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon'\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { useParams } from 'react-router-dom'\r\nimport db from './firebase';\r\nimport {useStateValue} from './StateProvider'\r\nimport firebase from 'firebase'\r\n\r\nfunction Chat() {\r\n    const [input,setInput] = useState();\r\n    const [seed,setSeed] = useState();\r\n    const {roomId} = useParams();\r\n    const [roomName,setRoomName] = useState(\"\");\r\n    const [messages,setMessages] = useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection(\"rooms\").\r\n            doc(roomId).\r\n            onSnapshot(snapshot => \r\n                setRoomName(snapshot.data().name)\r\n            );\r\n            db.collection(\"rooms\")\r\n            .doc(roomId).\r\n            collection(\"messages\").\r\n            orderBy('timestamp','asc').\r\n            onSnapshot((snapshot) => (\r\n                setMessages(snapshot.docs.map((doc)=>\r\n                doc.data())))\r\n            )\r\n        }\r\n\r\n    },[roomId])\r\n\r\n    const sendMessage = async(e) => {\r\n        e.preventDefault();\r\n        console.log({input});\r\n        db.collection(\"rooms\").doc(roomId).collection('messages').add({\r\n            message:input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setInput(\"\");\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n    },[])\r\n  \r\n    \r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat_header\">\r\n                <Avatar src={`http://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"chat_headerInfo\">\r\n                    {/* <h3>Room Name</h3> */}\r\n                    <h3>{roomName}</h3>\r\n                    <p>{(messages[messages.length-1]?.\r\n                    timestamp?.toDate().toUTCString())}</p>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFileIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat_body\">\r\n\r\n                {messages.map((message) => (\r\n\r\n                    <p className={`chat_message ${message.name==user.displayName && 'chat_sent'}`}>\r\n                    <span className=\"chat_name\">{message.name}</span>\r\n                    {/* This is a message */}\r\n                    {message.message}\r\n                    {/* {new Date(message.timestamp.toDate()).toUTCString()} */}\r\n                    <span className=\"chat_timestamp\">time stamp</span>\r\n                    </p>\r\n\r\n                ))}\r\n\r\n{/*                 \r\n                <p className=\"chat_message\">\r\n                    <span className=\"chat_name\">sonny</span>\r\n                    This is a message\r\n                    <span className=\"chat_timestamp\">{new Date().toUTCString()}</span>\r\n                </p> */}\r\n                \r\n            </div>\r\n\r\n            <div className=\"chat_footer\">\r\n                <IconButton>\r\n                    <InsertEmoticonIcon/>\r\n                </IconButton>\r\n                <form>\r\n                    <input value = {input} onChange={e => \r\n                        {\r\n                            setInput(e.target.value);\r\n                        }\r\n                    } placeholder=\"Type Your Message\" type=\"text\"/>\r\n                    <button \r\n                    onClick={sendMessage}\r\n                    type=\"submit\">Send</button>\r\n                </form>\r\n                <IconButton>\r\n                    <MicIcon/>\r\n                </IconButton>\r\n                \r\n            </div>\r\n            \r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n    user:null,\r\n}\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",    \r\n};\r\n\r\nconst reducer = (state,action) => {\r\n    console.log(action);\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return{\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react'\r\nimport './Login.css'\r\nimport {Button} from '@material-ui/core'\r\nimport { auth,provider } from './firebase';\r\nimport {actionTypes} from \"./reducer\"\r\nimport {useStateValue} from './StateProvider'\r\n\r\nfunction Login() {\r\n    const[{},dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n\r\n        auth.signInWithPopup(provider).then((result) =>{ \r\n\r\n            // console.log(result)\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n\r\n            })\r\n\r\n        }).catch(error =>\r\n                alert(error.message)\r\n                )\r\n\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSVyM8UqYD7e1vRD1jy21OySMs-GCkUQi5O-A&usqp=CAU\"\r\n                alt=\"\"\r\n                />\r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to whatsapp</h1>\r\n                </div>\r\n                <Button type=\"submit\" onClick={signIn}>\r\n                    Sign In With Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import {React,useState,useEffect} from 'react'\r\nimport './App.css'\r\nimport Sidebar from './Sidebar'\r\nimport Chat from './Chat'\r\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\r\nimport Login from './Login'\r\nimport {useStateValue} from './StateProvider'\r\n\r\n// reducer + context\r\n// firebase gauravverma.gv.786@gmail.com\r\nfunction App() {\r\n    // const [user,setUser] = useState(null);\r\n    const [{user},dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"app\">\r\n        {!user ? (\r\n            <Login/>\r\n        ):(\r\n            \r\n            <div className=\"app_body\">\r\n                <Router> \r\n                    <Sidebar/>\r\n                    <Switch>\r\n                        <Route path=\"/rooms/:roomId\"> \r\n                           \r\n                            <Chat/>\r\n                        </Route>\r\n                        {/* <Route path=\"/\">\r\n                            <Chat/>\r\n                        </Route> */}\r\n                    </Switch>\r\n                    \r\n                </Router> \r\n               {/* <Sidebar/>\r\n               <Chat/> */}\r\n                \r\n            </div>\r\n        \r\n        )}\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StateProvider } from './StateProvider';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, {initialState} from './reducer'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} \n    reducer={reducer}>\n      <App/>\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}